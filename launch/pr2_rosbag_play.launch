<launch>
  <arg name="rosbag" />
  <arg name="manager" default="rosbag_play_nodelet_manager" />
  <arg name="launch_nodelet_manager" default="true" />
  <arg name="loop" default="true" />
  <arg name="gui" default="false" />
  <arg name="loop_flag" value="--loop" if="$(arg loop)" />
  <arg name="loop_flag" value="" unless="$(arg loop)" />

  <arg name="RGB_CAMERA_INFO" value="/kinect_head/rgb/throttled/camera_info" />
  <arg name="RGB_IMAGE" value="/kinect_head/rgb/throttled/image_rect_color" />
  <arg name="QUAT_RGB_CAMERA_INFO" value="/kinect_head/rgb/quater/throttled/camera_info" />
  <arg name="QUAT_RGB_IMAGE" value="/kinect_head/rgb/quater/throttled/image_rect_color" />
  <arg name="DEPTH_CAMERA_INFO" value="/kinect_head/depth_registered/throttled/camera_info" />
  <arg name="DEPTH_IMAGE" value="/kinect_head/depth_registered/throttled/image_rect" />

  <arg name="visualize_optimization" default="true" />
  <arg name="use_base" default="true" />
  <arg name="arm" default="right" />
  <arg name="sensor_type" default="none" doc="If given, /sensor_placement node does not wait for /sensor_type topic" />

  <param name="use_sim_time" value="true" />

  <include file="$(find pr2_description)/robots/upload_pr2.launch">
    <arg name="KINECT1" value="true" />
    <arg name="KINECT2" value="false" />
  </include>
  <node pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" output="screen" />

  <!-- decompress -->
  <node name="rgb_decompress" pkg="image_transport" type="republish"
        args="compressed in:=$(arg RGB_IMAGE) raw out:=$(arg RGB_IMAGE)" />
  <node name="depth_decompress" pkg="image_transport" type="republish"
        args="compressedDepth in:=$(arg DEPTH_IMAGE) raw out:=$(arg DEPTH_IMAGE)" />
  <node pkg="nodelet" type="nodelet" name="point_cloud_xyzrgb"
        args="load depth_image_proc/point_cloud_xyzrgb $(arg manager)" output="screen" >
    <remap from="rgb/camera_info" to="$(arg RGB_CAMERA_INFO)" />
    <remap from="rgb/image_rect_color" to="$(arg RGB_IMAGE)" />
    <remap from="depth_registered/image_rect" to="$(arg DEPTH_IMAGE)" />
    <remap from="depth_registered/points" to="/kinect_head/depth_registered/throttled/points" />
    <rosparam>
      queue_size: 100
    </rosparam>
  </node>
  <node name="resize_rgb" pkg="nodelet" type="nodelet"
        args="load image_proc/resize $(arg manager)" output="screen">
    <remap from="image" to="$(arg RGB_IMAGE)" />
    <remap from="camera_info" to="$(arg RGB_CAMERA_INFO)" />
    <remap from="~image" to="$(arg QUAT_RGB_IMAGE)" />
    <remap from="~camera_info" to="$(arg QUAT_RGB_CAMERA_INFO)" />
    <rosparam>
      scale_width: 0.25
      scale_height: 0.25
    </rosparam>
  </node>
  <node name="resize_cloud" pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ResizePointsPublisher $(arg manager)" output="screen">
    <remap from="~input" to="/kinect_head/depth_registered/throttled/points" />
    <remap from="~output" to="/kinect_head/depth_registered/quater/throttled/points" />
    <rosparam>
      step_x: 4
      step_y: 4
    </rosparam>
  </node>

  <!-- relay -->
  <node name="rgb_image_relay" pkg="topic_tools" type="relay"
        args="$(arg RGB_IMAGE) /kinect_head/rgb/image_rect_color" />
  <node name="rgb_info_relay" pkg="topic_tools" type="relay"
        args="$(arg RGB_CAMERA_INFO) /kinect_head/rgb/camera_info" />
  <node name="quat_rgb_image_relay" pkg="topic_tools" type="relay"
        args="$(arg QUAT_RGB_IMAGE) /kinect_head/rgb/quater/image_rect_color" />
  <node name="quat_rgb_info_relay" pkg="topic_tools" type="relay"
        args="$(arg QUAT_RGB_CAMERA_INFO) /kinect_head/rgb/quater/camera_info" />
  <node name="depth_image_relay" pkg="topic_tools" type="relay"
        args="$(arg DEPTH_IMAGE) /kinect_head/depth_registered/image_rect" />
  <node name="depth_info_relay" pkg="topic_tools" type="relay"
        args="$(arg DEPTH_CAMERA_INFO) /kinect_head/depth_registered/camera_info" />
  <node name="points_relay" pkg="topic_tools" type="relay"
        args="/kinect_head/depth_registered/throttled/points /kinect_head/depth_registered/points" />
  <node name="quat_points_relay" pkg="topic_tools" type="relay"
        args="/kinect_head/depth_registered/quater/throttled/points /kinect_head/depth_registered/quater/points" />

  <!-- Plane extraction -->
  <node name="organized_multi_plane_segmentation"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/OrganizedMultiPlaneSegmentation $(arg manager)">
    <remap from="~input" to="/kinect_head/depth_registered/points"/>
    <rosparam>
      publish_normal: true
    </rosparam>
  </node>

  <!-- Convert Polygon Array -->
  <node name="polygon_array_transformer"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/PolygonArrayTransformer $(arg manager)">
    <remap from="~input_polygons"
           to="/organized_multi_plane_segmentation/output_polygon"/>
    <remap from="~input_coefficients"
           to="/organized_multi_plane_segmentation/output_coefficients"/>
    <rosparam>
      frame_id: /base_footprint
    </rosparam>
  </node>

  <!-- rosbag player -->
  <node pkg="rosbag" type="play" name="rosbag_play"
        args="$(arg rosbag) $(arg loop_flag) --clock" output="screen" />

  <node pkg="rviz" type="rviz" name="$(anon rviz)" if="$(arg gui)"
        args="-d $(find jsk_pr2_startup)/config/jsk_startup.rviz" />

  <group if="$(arg visualize_optimization)">
    <!-- Subscribe /sensor_placement/request in rosbag file
         and then call /sensor_placement service -->
    <node pkg="yamaopt_ros" type="sub_and_call_sensor_placement.py"
          name="sub_and_call_sensor_placement" output="screen" />
    <node pkg="yamaopt_ros" type="sensor_placement.py" name="sensor_placement" output="screen">
      <rosparam subst_value="true">
        robot_name: pr2
        arm: $(arg arm)
        use_base: $(arg use_base)
        d_hover: 0.05
        polygon_shrink: 0.03
        visualize: true
        pub_service: false
        sensor_type: $(arg sensor_type)
      </rosparam>
    </node>
  </group>

</launch>
